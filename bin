set -eu

REMOTE=${1:-origin}
CURRENT_COMMIT_HASH="$(git rev-parse --short HEAD)"

# Start at the top level directory of the repository.
cd "$(git rev-parse --show-toplevel)"

# Check out the 'gh-pages' branch in a subdirectory.
git worktree add --checkout gh-pages "$REMOTE"/gh-pages

# Pretty print DocC JSON output, so that it has a stable ordering and
# can be diffed.  This lets us determine whether rebuilding resulted in
# any changes to the content.
export DOCC_JSON_PRETTYPRINT="YES"

# The staging version of the book gets the staging header.
cp -n TSPL.docc/header-staging.html TSPL.docc/header.html

# Build documentation, writing output in the gh-pages/docs subdirectory.
docc convert \
    --experimental-enable-custom-templates \
    --hosting-base-path swift-book \
    --output-path "./gh-pages/docs" \
    TSPL.docc

rm TSPL.docc/header.html

# Commit and push our changes to the gh-pages branch
pushd gh-pages
git add docs

if [[ -n "$(git status --porcelain)" ]]
then
    echo "Found documentation changes."
    echo "Committing the changes to the 'gh-pages' branch and pushing to $REMOTE."
    git commit -m "Update GitHub Pages documentation site to '$CURRENT_COMMIT_HASH'."
    echo
    git push "$REMOTE" HEAD:gh-pages
else
    echo "No documentation changes found."
fi

popd

git worktree remove gh-pages
